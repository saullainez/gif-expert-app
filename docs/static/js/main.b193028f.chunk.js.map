{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/Loading.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","Loading","loading","GifGrid","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAMlB,SACI,uBACAO,KAAK,OACLC,MAAQT,EACRU,SAlBkB,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCEL,SAASO,EAAT,GAAwC,IAAhBH,EAAe,EAAfA,MAAOV,EAAQ,EAARA,IAC1C,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,UCHL,IAAMO,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACI,mCACMA,GAAW,mBAAGJ,UAAU,mCAAb,2BCDZK,EAAU,SAAC,GAAoB,IAAjBrB,EAAgB,EAAhBA,SAGvB,ECLwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOE,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAW,WACPzB,EAASC,GACJyB,MAAM,SAAAC,GACHH,EAAS,CACLhB,KAAMmB,EACNN,SAAQ,SAGrB,CAAEpB,IAEEsB,EDZ0BK,CAAa3B,GAAjCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAEpD,cAAC,EAAD,CAASoB,QAASA,IAElB,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAEC,GAAF,OACR,cAACK,EAAD,eAESL,GADAA,EAAIC,aEYtBiB,EA5BM,WAEjB,MAAoC1C,mBAAS,CAAC,iBAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADNA,Y,MCfjC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b193028f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(  inputValue.trim().length > 2 ){\r\n            setCategories( cats => [inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            value={ inputValue }\r\n            onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=lV7Z03JbwePPaOSjsvETxUV4icZt5ECd&limit=10`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    } )\r\n    return gifs ;\r\n}","import React from 'react'\r\n\r\nexport default function GifGridItem( { title, url } ) {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Loading = ({ loading }) => {\r\n    return (\r\n        <>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n        </>\r\n    )\r\n}\r\n\r\nLoading.propTypes = {\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\nimport { Loading } from './Loading';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>  \r\n\r\n            <Loading loading={loading} />\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( ( img ) =>\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            { ...img }\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading:false\r\n                });\r\n            } )\r\n    }, [ category ])\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = (  ) => {\r\n\r\n    const [categories, setCategories] = useState(['Breaking Bad']);\r\n\r\n    /*const handleAdd = () => {\r\n        setCategories( cats => [...categories, 'Agregar'] );\r\n    }*/\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid \r\n                            key={category}\r\n                            category={ category } \r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}